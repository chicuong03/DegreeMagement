'use client';

import Link from 'next/link';
import { useEffect, useState } from 'react';
import { Table } from 'react-bootstrap';

interface AuditLog {
  _id: string;
  certificate: number;
  action: string;
  performed_by: string;
  timestamp: string;
}

export default function Home() {

  const [auditLogs, setAuditLogs] = useState<AuditLog[]>([]);

  useEffect(() => {
    const handleScroll = () => {
      const parallaxElement = document.getElementById('parallax-bg');
      if (parallaxElement) {
        parallaxElement.style.transform = `translateY(${window.scrollY * 0.5}px)`;
      }
    };
    window.addEventListener('scroll', handleScroll);
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []);

  useEffect(() => {
    const fetchAuditLogs = async () => {
      try {
        const response = await fetch('/api/auditlog');
        const result = await response.json();

        if (result.success) {
          setAuditLogs(result.data);
        } else {
          console.error("L·ªói API:", result.error);
        }
      } catch (error) {
        console.error("L·ªói khi l·∫•y audit log:", error);
      }
    };

    fetchAuditLogs();
  }, []);

  return (
    <div style={homeStyle.container}>
      {/* N·ªÅn v·ªõi gradient v√† hi·ªáu ·ª©ng parallax */}


      <section className="mt-3" style={homeStyle.hero}>
        <div id="parallax-bg" style={homeStyle.parallax}>
          <div style={homeStyle.parallaxOverlay}></div>
        </div>
        <style jsx global>{`
          @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
          }
          
          @keyframes fade-in {
            0% { opacity: 0; transform: translateY(20px); }
            100% { opacity: 1; transform: translateY(0); }
          }
          
          @keyframes shine {
            0% { background-position: -100% 0; }
            100% { background-position: 200% 0; }
          }
          
          .hero-image-container {
            position: relative;
            overflow: hidden;
            border-radius: 12px;
            box-shadow: 0 15px 20px -5px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
          }
          
          .hero-image-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.3);
          }
          
          .hero-image {
            width: 100%;
            height: auto;
            transition: transform 0.6s ease;
          }
          
          .hero-image-container:hover .hero-image {
            transform: scale(1.05);
          }
          
          .hero-content-item {
            animation: fade-in 0.8s ease-out forwards;
            opacity: 0;
          }
          
          .hero-title {
            animation-delay: 0.2s;
          }
          
          .hero-subtitle {
            animation-delay: 0.4s;
          }
          
          .hero-button-container {
            animation-delay: 0.6s;
          }
          
          .shine-button {
            position: relative;
            overflow: hidden;
          }
          
          .shine-button:after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 200%;
            height: 100%;
            background: linear-gradient(
              to right, 
              rgba(255, 255, 255, 0) 0%,
              rgba(255, 255, 255, 0.3) 50%,
              rgba(255, 255, 255, 0) 100%
            );
            transform: skewX(-20deg);
            animation: shine 3s infinite;
            background-size: 200% 100%;
          }
          
          .floating-image-left {
            animation: float 6s ease-in-out infinite;
          }
          
          .floating-image-right {
            animation: float 6s ease-in-out 2s infinite;
          }
        `}</style>

        <div style={homeStyle.heroContainer}>
          <div style={homeStyle.heroImageLeft} className="hero-image-container floating-image-left">
            <a
              href="https://testnet.coinex.net/token/0x288887A325a73497912f34e126A47A5383cE7f69"
              target="_blank"
              rel="noopener noreferrer"
              style={{ display: 'block', width: '100%', height: '100%', cursor: 'pointer' }}
            >
              <img
                src="/images/bn1.jpg"
                alt="Blockchain Certificate"
                style={homeStyle.heroImage}
                className="hero-image"
              />
              <div style={homeStyle.imageOverlay}></div>
            </a>
          </div>

          {/* Ph·∫ßn n·ªôi dung ch√≠nh */}
          <div style={homeStyle.heroContent}>
            <h1 style={homeStyle.heroTitle} className="hero-content-item hero-title">
              Qu·∫£n L√Ω B·∫±ng C·∫•p V·ªõi C√¥ng Ngh·ªá Blockchain
            </h1>
            <p style={homeStyle.heroSubtitle} className="hero-content-item hero-subtitle">
              ƒê·∫£m b·∫£o t√≠nh minh b·∫°ch, b·∫£o m·∫≠t v√† hi·ªán ƒë·∫°i h√≥a quy tr√¨nh qu·∫£n l√Ω th√¥ng tin.
            </p>
            <div className="hero-content-item hero-button-container">
              <Link href="/">
                <button style={homeStyle.ctaButton} className="shine-button">
                  B·∫Øt ƒë·∫ßu ngay
                </button>
              </Link>
            </div>
            <div style={homeStyle.statsBadges} className="hero-content-item">
              <div style={homeStyle.badge}>
                <span style={homeStyle.badgeIcon}>üîí</span>
                <span style={homeStyle.badgeText}>B·∫£o m·∫≠t</span>
              </div>
              <div style={homeStyle.badge}>
                <span style={homeStyle.badgeIcon}>‚ö°</span>
                <span style={homeStyle.badgeText}>T·ªëc ƒë·ªô</span>
              </div>
              <div style={homeStyle.badge}>
                <span style={homeStyle.badgeIcon}>üåê</span>
                <span style={homeStyle.badgeText}>To√†n c·∫ßu</span>
              </div>
            </div>
          </div>

          <div style={homeStyle.heroImageRight} className="hero-image-container floating-image-right">
            <a
              href="https://testnet.coinex.net/token/0x288887A325a73497912f34e126A47A5383cE7f69"
              target="_blank"
              rel="noopener noreferrer"
              style={{ display: 'block', width: '100%', height: '100%', cursor: 'pointer' }}
            >
              <img
                src="/images/bn2.jpg"
                alt="Digital Certificate"
                style={homeStyle.heroImage}
                className="hero-image"
              />
              <div style={homeStyle.imageOverlay}></div>
            </a>
          </div>
        </div>

        <div style={homeStyle.heroWave}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 1440 120"
            preserveAspectRatio="none"
            style={{ width: '100%', height: '120px', display: 'block' }}
          >
            <path
              fill="#ffffff"
              fillOpacity="1"
              d="M0,64L80,69.3C160,75,320,85,480,80C640,75,800,53,960,48C1120,43,1280,53,1360,58.7L1440,64L1440,120L1360,120C1280,120,1120,120,960,120C800,120,640,120,480,120C320,120,160,120,80,120L0,120Z"
            ></path>
          </svg>
        </div>
      </section>

      <div className="auditLog">
        <h2 className="mt-3 text-3xl font-bold text-gray-800 uppercase tracking-wide border-b-4 pb-2">
          Activity History
        </h2>
        <div className="tableContainer">
          {/* Container b√™n ngo√†i v·ªõi bo g√≥c */}
          <div style={{
            borderRadius: '15px',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
            overflow: 'hidden',
            backgroundColor: '#eeeeee',
            padding: '8px'
          }}>
            {/* Th√™m container c√≥ fixed height v√† overflow auto ƒë·ªÉ t·∫°o scrollable */}
            <div style={{
              maxHeight: '500px', // Gi·ªõi h·∫°n chi·ªÅu cao t·ªëi ƒëa
              overflowY: 'auto', // Cho ph√©p cu·ªôn theo tr·ª•c Y
            }}>
              <Table
                hover
                responsive
                style={{
                  marginBottom: '0',
                  backgroundColor: '#eeeeee',
                }}
              >
                <thead style={{ position: 'sticky', top: 0, zIndex: 1 }}>
                  <tr style={{ backgroundColor: '#ff9940' }}>
                    <th style={{
                      textAlign: 'center',
                      verticalAlign: 'middle',
                      padding: '10px',
                      border: 'none',
                      backgroundColor: '#ff9940',
                      color: '#333'
                    }}>ID</th>
                    <th style={{
                      textAlign: 'center',
                      verticalAlign: 'middle',
                      padding: '10px',
                      border: 'none',
                      backgroundColor: '#ff9940',
                      color: '#333'
                    }}>Certificate</th>
                    <th style={{
                      textAlign: 'center',
                      verticalAlign: 'middle',
                      padding: '10px',
                      border: 'none',
                      backgroundColor: '#ff9940',
                      color: '#333'
                    }}>Action</th>
                    <th style={{
                      textAlign: 'center',
                      verticalAlign: 'middle',
                      padding: '10px',
                      border: 'none',
                      backgroundColor: '#ff9940',
                      color: '#333'
                    }}>Performed By</th>
                    <th style={{
                      textAlign: 'center',
                      verticalAlign: 'middle',
                      padding: '10px',
                      border: 'none',
                      backgroundColor: '#ff9940',
                      color: '#333'
                    }}>Times</th>
                  </tr>
                </thead>
                <tbody>
                  {Array.isArray(auditLogs) && auditLogs.length > 0 ? (
                    auditLogs
                      .sort((a, b) => (Number(b.certificate) || 0) - (Number(a.certificate) || 0))
                      .map((log, index) => (
                        <tr
                          key={log._id}
                          style={{
                            backgroundColor: index % 2 === 0 ? '#fff5eb' : '#ffe0cc',
                            border: 'none',
                            transition: 'background-color 0.2s'
                          }}
                          onMouseEnter={(e) => { e.currentTarget.style.backgroundColor = '#ffcc99' }}
                          onMouseLeave={(e) => { e.currentTarget.style.backgroundColor = index % 2 === 0 ? '#fff5eb' : '#ffe0cc' }}
                        >
                          <td style={{ textAlign: 'center', verticalAlign: 'middle', padding: '8px', border: 'none' }}>{log._id}</td>
                          <td style={{ textAlign: 'center', verticalAlign: 'middle', padding: '8px', border: 'none' }}>{log.certificate}</td>
                          <td style={{ textAlign: 'center', verticalAlign: 'middle', padding: '8px', border: 'none' }}>{log.action}</td>
                          <td style={{ textAlign: 'center', verticalAlign: 'middle', padding: '8px', border: 'none' }}>{log.performed_by}</td>
                          <td style={{ textAlign: 'center', verticalAlign: 'middle', padding: '8px', border: 'none' }}>{new Date(log.timestamp).toLocaleString()}</td>
                        </tr>
                      ))
                  ) : (
                    <tr>
                      <td colSpan={5} style={{ textAlign: 'center', color: '#6c757d', padding: '10px', border: 'none' }}>No data available</td>
                    </tr>
                  )}
                </tbody>
              </Table>
            </div>
          </div>
        </div>
      </div>

      <section className='mt-3' style={homeStyle.about}>
        <h2 style={homeStyle.sectionTitle}>V·ªÅ D·ª± √Ån</h2>
        <p style={homeStyle.sectionText}>
          D·ª± √°n c·ªßa ch√∫ng t√¥i t·∫≠p trung v√†o vi·ªác ·ª©ng d·ª•ng c√¥ng ngh·ªá blockchain ƒë·ªÉ qu·∫£n l√Ω b·∫±ng c·∫•p.
          H·ªá th·ªëng gi√∫p b·∫£o v·ªá d·ªØ li·ªáu, ch·ªëng gi·∫£ m·∫°o v√† cung c·∫•p quy·ªÅn truy c·∫≠p th√¥ng tin t·ª©c th·ªùi.
        </p>
        <div style={homeStyle.featureCards}>
          <div style={homeStyle.featureCard}>
            <h3 style={homeStyle.featureTitle}>B·∫£o M·∫≠t Cao</h3>
            <p style={homeStyle.featureText}>
              D·ªØ li·ªáu c·ªßa b·∫°n ƒë∆∞·ª£c l∆∞u tr·ªØ an to√†n v√† kh√¥ng th·ªÉ b·ªã thay ƒë·ªïi b·ªüi b√™n th·ª© ba.
            </p>
          </div>
          <div style={homeStyle.featureCard}>
            <h3 style={homeStyle.featureTitle}>Truy C·∫≠p D·ªÖ D√†ng</h3>
            <p style={homeStyle.featureText}>
              Ng∆∞·ªùi d√πng c√≥ th·ªÉ truy c·∫≠p th√¥ng tin m·ªçi l√∫c, m·ªçi n∆°i v·ªõi giao di·ªán th√¢n thi·ªán.
            </p>
          </div>
          <div style={homeStyle.featureCard}>
            <h3 style={homeStyle.featureTitle}>Hi·ªán ƒê·∫°i</h3>
            <p style={homeStyle.featureText}>
              S·ª≠ d·ª•ng c√¥ng ngh·ªá blockchain ti√™n ti·∫øn ƒë·ªÉ n√¢ng cao hi·ªáu qu·∫£ v√† s·ª± minh b·∫°ch.
            </p>
          </div>
        </div>
      </section>

      <section style={homeStyle.features}>
        <h2 style={homeStyle.sectionTitle}>C√°c Ch·ª©c NƒÉng Ch√≠nh</h2>
        <div style={homeStyle.featureCards}>
          <div style={homeStyle.card}>
            <img
              src="/images/tttd.jpg"
              alt="Facebook"
              style={homeStyle.cardImg}
            />
            <h3 style={homeStyle.cardTitle}>Tra C·ª©u</h3>
            <p style={homeStyle.cardText}>Qu·∫£n l√Ω th√¥ng tin sinh vi√™n m·ªôt c√°ch nhanh ch√≥ng</p>
            <Link href="/verify">
              <button style={homeStyle.cardButton}>Truy c·∫≠p</button>
            </Link>
          </div>
          <div style={homeStyle.card}>
            <img
              src="/images/tt.jpg"
              alt="Admin"
              style={homeStyle.cardImg}
            />
            <h3 style={homeStyle.cardTitle}>Home</h3>
            <p style={homeStyle.cardText}>Giao di·ªán minh b·∫°ch c√¥ng khai b·∫•t k√¨ ai c·ªßng c√≥ th·ªÉ ki·ªÉm tra</p>
            <Link href="/">
              <button style={homeStyle.cardButton}>Truy c·∫≠p</button>
            </Link>
          </div>
          <div style={homeStyle.card}>
            <img
              src="/images/bangcap.jpg"
              alt="User"
              style={homeStyle.cardImg}
            />
            <h3 style={homeStyle.cardTitle}>NFT</h3>
            <p style={homeStyle.cardText}>Qu·∫£n l√Ω th√¥ng tin sinh vi√™n v√† b·∫±ng c·∫•p th√¥ng qua NFT</p>
            <Link href="https://testnet.coinex.net/token/0x288887A325a73497912f34e126A47A5383cE7f69">
              <button style={homeStyle.cardButton}>Truy c·∫≠p</button>
            </Link>
          </div>
        </div>
      </section>

      <section style={homeStyle.team}>
        <h2 style={homeStyle.sectionTitle}>The Teams</h2>
        <div style={homeStyle.teamMembers}>
          <div style={homeStyle.teamMember}>
            <img
              src="/images/2025.png"
              alt="Team Member"
              style={homeStyle.teamImg}
            />
            <h3 style={homeStyle.teamName}>L√™ Ch√≠ C∆∞·ªùng</h3>
            <p style={homeStyle.teamRole}>ChisCuong</p>
          </div>
        </div>
      </section>

      <section style={homeStyle.contact}>
        <h2 style={homeStyle.sectionTitle}>Li√™n H·ªá</h2>
        <p style={homeStyle.contactText}>
          ƒê·ªãa ch·ªâ: 308/91B Long Tuy·ªÅn B√¨nh Th·ªßy CT <br />
          Email: cuongchi129@gmail.com.com <br />
          ƒêi·ªán tho·∫°i: 03 2950 2687
        </p>
      </section>
    </div>
  );
}

const homeStyle: { [key: string]: React.CSSProperties } = {
  container: {
    position: 'relative',
    minHeight: '100vh',
    overflow: 'hidden',
    fontFamily: '"Segoe UI", Roboto, "Helvetica Neue", sans-serif',
  },
  parallax: {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    // S·ª≠ d·ª•ng l·∫°i m√†u n·ªÅn ban ƒë·∫ßu
    background: 'linear-gradient(90deg, #4A90E2, #50E3C2)',
    zIndex: -1,
  },
  parallaxOverlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    background: 'url("/images/grid-pattern.png")',
    opacity: 0.1,
  },
  hero: {
    position: 'relative',
    borderRadius: '5px',
    padding: '50px 0 80px',
    color: '#fff',
    overflow: 'hidden',
  },
  heroWave: {
    position: 'absolute',
    bottom: -1,
    left: 0,
    width: '100%',
    height: '100px', // Gi·∫£m chi·ªÅu cao wave
    zIndex: 1,
  },
  heroContainer: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    maxWidth: '1200px',
    margin: '0 auto',
    padding: '0 20px',
    position: 'relative',
    zIndex: 2,
    gap: '20px', // Gi·∫£m kho·∫£ng c√°ch gi·ªØa c√°c ph·∫ßn t·ª≠
    flexWrap: 'wrap',
  },
  heroImageLeft: {
    flex: '1 1 260px', // Gi·∫£m k√≠ch th∆∞·ªõc xu·ªëng
    maxWidth: '260px',
    minWidth: '200px',
  },
  heroContent: {
    flex: '1 1 450px',
    textAlign: 'center',
    padding: '10px', // Gi·∫£m padding
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    gap: '15px', // Gi·∫£m kho·∫£ng c√°ch gi·ªØa c√°c ph·∫ßn t·ª≠ n·ªôi dung
  },
  heroImageRight: {
    flex: '1 1 260px', // Gi·∫£m k√≠ch th∆∞·ªõc xu·ªëng
    maxWidth: '260px',
    minWidth: '200px',
  },
  heroImage: {
    width: '100%',
    height: 'auto',
  },
  imageOverlay: {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    background: 'linear-gradient(to bottom, rgba(0,0,0,0.1), rgba(0,0,0,0.3))',
    borderRadius: '12px',
  },
  heroTitle: {
    fontSize: '2.5rem', // Gi·∫£m k√≠ch th∆∞·ªõc font
    fontWeight: 'bold',
    margin: '0 0 5px', // Gi·∫£m margin
    textShadow: '0 2px 5px rgba(0,0,0,0.1)',
  },
  heroSubtitle: {
    fontSize: '1.2rem', // Gi·∫£m k√≠ch th∆∞·ªõc font
    lineHeight: '1.5',
    margin: '0 0 15px', // Gi·∫£m margin
    maxWidth: '550px',
  },
  ctaButton: {
    background: '#28a745', // S·ª≠ d·ª•ng l·∫°i m√†u n√∫t ban ƒë·∫ßu
    border: 'none',
    padding: '12px 25px', // Gi·∫£m padding
    fontSize: '1.1rem',
    fontWeight: 'bold',
    color: '#fff',
    borderRadius: '5px', // S·ª≠ d·ª•ng border-radius ban ƒë·∫ßu
    cursor: 'pointer',
    transition: 'all 0.3s',
    boxShadow: '0 4px 10px rgba(40, 167, 69, 0.3)',
  },
  statsBadges: {
    display: 'flex',
    justifyContent: 'center',
    gap: '10px',
    marginTop: '10px', // Gi·∫£m margin
    flexWrap: 'wrap',
  },
  badge: {
    background: 'rgba(255, 255, 255, 0.15)',
    borderRadius: '20px',
    padding: '6px 12px', // Gi·∫£m padding
    display: 'flex',
    alignItems: 'center',
    gap: '6px',
    border: '1px solid rgba(255, 255, 255, 0.2)',
  },
  badgeIcon: {
    fontSize: '1rem',
  },
  badgeText: {
    fontSize: '0.85rem',
    fontWeight: '500',
  },
  // heroImageLeft: {
  //   flex: '1 1 30%',          // H√¨nh ·∫£nh chi·∫øm 30% chi·ªÅu r·ªông
  //   paddingRight: '20px',
  //   animation: 'floatLeft 6s ease-in-out infinite',
  // },
  // heroContent: {
  //   flex: '1 1 40%',          // N·ªôi dung chi·∫øm 40% chi·ªÅu r·ªông
  //   textAlign: 'center',
  //   padding: '20px',          // Padding ƒë·ªÉ n·ªôi dung kh√¥ng s√°t l·ªÅ
  // },
  // heroImageRight: {
  //   flex: '1 1 30%',          // H√¨nh ·∫£nh b√™n ph·∫£i chi·∫øm 30% chi·ªÅu r·ªông
  //   paddingLeft: '20px',
  //   animation: 'floatRight 6s ease-in-out infinite',
  // },
  // heroImage: {
  //   width: '100%',            // ƒê·∫£m b·∫£o h√¨nh ·∫£nh chi·∫øm ƒë·∫ßy ƒë·ªß kh√¥ng gian
  //   height: 'auto',           // T·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh chi·ªÅu cao theo t·ª∑ l·ªá
  //   borderRadius: '8px',
  // },
  // heroTitle: {
  //   fontSize: '3rem',
  //   fontWeight: 'bold',
  //   margin: '20px 0',
  // },
  // heroSubtitle: {
  //   fontSize: '1.5rem',
  //   margin: '10px 0 30px',
  // },
  // ctaButton: {
  //   backgroundColor: '#28a745',
  //   border: 'none',
  //   padding: '15px 30px',
  //   fontSize: '1.2rem',
  //   fontWeight: 'bold',
  //   color: '#fff',
  //   borderRadius: '5px',
  //   cursor: 'pointer',
  //   transition: 'transform 0.3s, background-color 0.3s',
  // },

  auditLog: {
    padding: "40px 20px",
    textAlign: "center",
    background: "#9abbdb",
    fontFamily: "Arial, sans-serif"
  },
  tableContainer: {
    overflowX: "auto",
    marginTop: "20px",
  },
  table: {
    width: "100%",
    maxWidth: "900px",
    margin: "0 auto",
    borderCollapse: "separate",
    borderSpacing: "0",
    border: "none",
    boxShadow: "0px 4px 12px rgba(0, 0, 0, 0.08)",
    borderRadius: "8px",
    overflow: "hidden",
    backgroundColor: "#9abbdb"
  },
  th: {
    background: "#9abbdb",
    color: "#333",
    padding: "14px",
    textAlign: "center",
    fontWeight: "600",
    border: "none"
  },
  td: {
    padding: "12px",
    textAlign: "center",
    border: "none"
  },
  evenRow: {
    background: "#fff5eb",
    transition: "background-color 0.3s"
  },
  oddRow: {
    background: "#9abbdb",
    transition: "background-color 0.3s"
  },
  rowHover: {
    backgroundColor: "#9abbdb !important"
  },
  noData: {
    padding: "20px",
    color: "#9abbdb",
    fontStyle: "italic"
  },

  about: {
    padding: '50px 20px',
    textAlign: 'center',
    background: '#f8f9fa',
  },
  sectionTitle: {
    fontSize: '2rem',
    fontWeight: 'bold',
    marginBottom: '20px',
  },
  sectionText: {
    fontSize: '1.1rem',
    color: '#555',
    lineHeight: '1.8',
    marginBottom: '40px',
  },
  featureCards: {
    display: 'flex',
    justifyContent: 'center',
    gap: '20px',
    flexWrap: 'wrap',
  },
  featureCard: {
    background: '#fff',
    boxShadow: '0 4px 10px rgba(0, 0, 0, 0.1)',
    borderRadius: '10px',
    padding: '20px',
    textAlign: 'center',
    flex: '1 1 calc(33% - 40px)',
    maxWidth: '300px',
    minWidth: '250px',
  },
  featureTitle: {
    fontSize: '1.5rem',
    fontWeight: 'bold',
    margin: '10px 0',
  },
  featureText: {
    fontSize: '1rem',
    color: '#666',
    margin: '10px 0',
  },
  features: {
    padding: '50px 20px',
    textAlign: 'center',
    background: '#fff',
  },
  card: {
    background: '#fff',
    boxShadow: '0 4px 10px rgba(0, 0, 0, 0.1)',
    borderRadius: '10px',
    textAlign: 'center',
    overflow: 'hidden',
    flex: '1 1 calc(33% - 40px)',
    maxWidth: '300px',
    minWidth: '250px',
    margin: '10px',
  },
  cardImg: {
    width: '100%',
    height: '200px',
    objectFit: 'cover',
  },
  cardTitle: {
    fontSize: '1.3rem',
    fontWeight: 'bold',
    margin: '10px 0',
  },
  cardText: {
    fontSize: '1rem',
    color: '#555',
    margin: '10px 20px',
  },
  cardButton: {
    display: 'inline-block',
    backgroundColor: '#007bff',
    border: 'none',
    padding: '10px 20px',
    fontSize: '1rem',
    fontWeight: 'bold',
    color: '#fff',
    borderRadius: '5px',
    cursor: 'pointer',
    margin: '10px 0',
    transition: 'transform 0.3s, background-color 0.3s',
  },
  team: {
    padding: '20px 20px',
    background: '#f1f3f5',
  },
  teamMembers: {
    display: 'flex',
    justifyContent: 'center',
    gap: '20px',
    flexWrap: 'wrap',
  },
  teamMember: {
    textAlign: 'center',
    maxWidth: '200px',
  },
  teamImg: {
    width: '100%',
    borderRadius: '50%',
    marginBottom: '10px',
  },
  teamName: {
    fontSize: '1.2rem',
    fontWeight: 'bold',
    margin: '5px 0',
  },
  teamRole: {
    fontSize: '1rem',
    color: '#666',
  },
  contact: {
    padding: '30px',
    textAlign: 'center',
    background: '#007bff',
    color: '#fff',
  },
  contactText: {
    lineHeight: '1.8',
  },
};
// Th√™m keyframes cho animations
const globalStyles = `
  @keyframes floatLeft {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
  }
  
  @keyframes floatRight {
    0% { transform: translateY(-10px); }
    50% { transform: translateY(0px); }
    100% { transform: translateY(-10px); }
  }
`;